{"version":3,"sources":["service/api.js","components/List2.js","components/list.js","components/Edit.js","components/form.js","App.js","index.js"],"names":["api","styles","StyleSheet","create","body","paddingTop","paddingBottom","paddingHorizontal","section","PdfCustom","dato","console","log","date","Date","size","style","fontSize","textAlign","margin","getDate","getMonth","getFullYear","marginTop","marginHorizontal","marginBottom","nombre","apellido","list","props","borrarRegistro","id","Swal","fire","title","text","showDenyButton","confirmButtonText","denyButtonText","then","result","isConfirmed","Axios","delete","_baseUrl","setTimeout","window","location","reload","isDenied","state","datosCargados","empleados","get","res","setState","data","this","cargarDatos","className","align","to","map","empleado","correo","fechaIngreso","role","onClick","document","fileName","class","React","Component","editUser","cambioValor","e","target","name","value","enviarDatos","preventDefault","put","history","push","match","params","onSubmit","htmlFor","type","readOnly","placeholder","onChange","required","Formulario","initValues","toISOString","split","initialValues","validate","valores","errores","test","post","errors","values","component","App","exact","path","Listar","editarEmpl","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6e2aa7f8.chunk.js","sourcesContent":["const api =\"https://striker-one.herokuapp.com/empleados/\";\nexport default api;\n","import React from 'react';\nimport { Page, Text, View, Document, StyleSheet } from '@react-pdf/renderer';\n\n// Create styles\nconst styles = StyleSheet.create({\n    body: {\n        paddingTop: 65,\n        paddingBottom: 65,\n        paddingHorizontal: 35,\n    },\n    section: {\n\n    }\n});\n\n// Create Document Component\nconst PdfCustom = ({dato}) => {\n    const monthNames = [\"ENERO\", \"FEBRERO\", \"MARZO\", \"ABRIL\", \"MAYO\", \"JUNIO\",\n    \"JULIO\", \"AGOSTO\", \"SEPTIEMBRE\", \"OCTUBRE\", \"NOVIEMBRE\", \"DICIEMBRE\"\n    ];\n\n    console.log(dato, 'entro');\n    const date = new Date()\n    return <Document>\n        <Page size=\"LETTER\" style={styles.body}>\n            <View>\n                <Text style={{ fontSize: '12px', textAlign: 'right', margin: 12 }}>\n                    MÉRIDA, YUCATAN A DÍA {date.getDate()} DE MES {monthNames[date.getMonth()]} DEL AÑO {date.getFullYear()}</Text>\n                <Text style={{ fontSize: '12px', textAlign: 'left', marginTop: 50, marginHorizontal:12, marginBottom: 50}}>A QUIEN CORRESPONDA:</Text>\n                <Text style={{ fontSize: '12px', textAlign: 'justify', margin: 12, }}>\n                    Por medio de la presente, extiendo mi recomendación personal a {dato.nombre +\" \"+ dato.apellido}, ha mostrado ser una persona íntegra, responsable y trabajadora.\n                    Por todo lo anterior, le considero una gran persona digna de confianza y con la aptitud y capacidad para afrontar cualquier responsabilidad que se deje a su cargo. Asimismo, puedo asegurar que es una persona con una ética intachable.\n                    Sin más por el momento, reitero mi más sincera recomendación para los fines que considere pertinentes.\n                </Text>\n\n                <Text style={{ fontSize: '12px', textAlign: 'center', marginHorizontal:12, marginBottom: 25  }}>\n                    FIRMA\n                </Text>\n                <Text style={{ fontSize: '12px', textAlign: 'center', marginBottom:5 }}>\n                    ________________________\n                </Text>\n                <Text style={{ fontSize: '12px', textAlign: 'center' }}>\n                    Bryan Isaac Mendez Pech\n                </Text>\n            </View>\n        </Page>\n    </Document>\n}\n\nexport default PdfCustom;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport _baseUrl from \"../service/api\";\nimport Axios from \"axios\";\nimport Swal from \"sweetalert2\";\nimport { PDFDownloadLink } from \"@react-pdf/renderer\";\nimport PdfCustom from \"./List2.js\";\n//import getUsuarios from \"../models/getUsuarios.js\";\n\nclass list extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { datosCargados: false, empleados: [] };\n    //    this.getUsuarios();\n  }\n  imprimir(dato) {\n    console.log(dato);\n  }\n  cargarDatos() {\n    //getUsuarios().then(res=>{this.setState({ datosCargados: true, empleados: res });});\n    Axios.get(_baseUrl).then((res) => {\n      this.setState({ datosCargados: true, empleados: res.data });\n    });\n  }\n  borrarRegistro = (id) => {\n    Swal.fire({\n      title: \"¿Estás seguro que deseas eliminar este usuario?\",\n      text: \"No se puede recuperar\",\n      showDenyButton: true,\n      confirmButtonText: \"SI\",\n      denyButtonText: `NO`,\n    }).then((result) => {\n      if (result.isConfirmed) {\n        Swal.fire(\"Eliminado!\", \"Recargando datos espere...\", \"success\");\n        Axios.delete(_baseUrl + id + \"/\").then(\n          setTimeout(() => {\n            window.location.reload();\n          }, 1500)\n        );\n      } else if (result.isDenied) {\n        Swal.fire(\"Cancelado\", \"\", \"info\");\n      }\n    });\n  };\n\n  componentDidMount() {\n    this.cargarDatos();\n  }\n\n  render() {\n    const { datosCargados, empleados } = this.state;\n    if (!datosCargados) {\n      return <div>Cargando...</div>;\n    } else {\n      return (\n        <div className=\"container\">\n          <br></br>\n          <div className=\"card\">\n            <div className=\"card-header\">\n              <div className=\"row\">\n                <div className=\"col\">\n                  <h4>Lista Empleado</h4>\n                </div>\n                <div className=\"col\" align=\"right\">\n                  <Link id=\"btn-add\" className=\"btn btn-success\" to={\"/add\"}>\n                    <i className=\"fas fa-plus\"></i>\n                  </Link>\n                </div>\n              </div>\n            </div>\n            <div className=\"card-body\">\n              <table className=\"table\">\n                <thead>\n                  <tr className=\"table-Light\">\n                    <th>Nombre</th>\n                    <th>Apellido</th>\n                    <th>Correo</th>\n                    <th>Fecha Ingreso</th>\n                    <th>Acciones</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {empleados.map((empleado) => (\n                    <tr key={empleado.id}>\n                      <td>{empleado.nombre}</td>\n                      <td>{empleado.apellido}</td>\n                      <td>{empleado.correo}</td>\n                      <td>{empleado.fechaIngreso}</td>\n                      <td>\n                        <div className=\"btn-group\" role=\"group\" aria-label=\"\">\n                          <Link\n                            id=\"btn-edit\"\n                            className=\"btn btn-warning\"\n                            to={\"/editEmpl/\" + empleado.id}\n                          >\n                            <i className=\"fas fa-pen\"></i>\n                          </Link>\n\n                          <button\n                            id=\"btn-delete\"\n                            className=\"btn btn-danger\"\n                            onClick={() => this.borrarRegistro(empleado.id)}\n                          >\n                            <i className=\"fas fa-trash-alt\"></i>\n                          </button>\n                          {/* <PDFDownloadLink document={<PdfCustom dato={empleados}/>} fileName={CartaRecomendacion_${empleados.nombre}.pdf}>\n                                \n                            </PDFDownloadLink> */}\n                          <PDFDownloadLink\n                            document={<PdfCustom dato={empleado} />}\n                            fileName=\"CartaRecomendación.pdf\"\n                          >\n                            <button className=\"btn btn-info\">\n                              <i class=\"fas fa-file-pdf\"></i>\n                            </button>\n                          </PDFDownloadLink>\n                        </div>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n            <div className=\"card-footer text-muted\"></div>\n          </div>\n          <br></br>\n        </div>\n      );\n    }\n  }\n}\n\nexport default list;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport _baseUrl from \"../service/api\";\nimport Axios from \"axios\";\n\nclass editUser extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      datosCargados: false,\n      empleado: [],\n    };\n  }\n  cambioValor = (e) => {\n    const state = this.state.empleado;\n    state[e.target.name] = e.target.value;\n    this.setState({ empleado: state });\n  };\n  enviarDatos = (e) => {\n    e.preventDefault();\n    const { id, nombre, apellido, correo, fechaIngreso } = this.state.empleado;\n\n    var data = {\n      nombre: nombre,\n      apellido: apellido,\n      correo: correo,\n      fechaIngreso: fechaIngreso,\n    };\n    Axios.put(_baseUrl + id + \"/\", data).then(this.props.history.push(\"/\"));\n  };\n\n  componentDidMount() {\n    Axios.get(_baseUrl + this.props.match.params.id + \"/\").then((res) => {\n      this.setState({ datosCargados: true, empleado: res.data });\n    });\n  }\n  render() {\n    const { datosCargados, empleado } = this.state;\n    if (!datosCargados) {\n      return <div>Cargando...</div>;\n    } else {\n      return (\n        \n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col\"></div>\n              <div className=\"col-6\">\n                <br></br>\n                <div className=\"card\">\n                  <div className=\"card-header\">Editar Empleado</div>\n                  <div className=\"card-body\">\n                    <form onSubmit={this.enviarDatos}>\n                      <div className=\"form-group\">\n                        <label htmlFor=\"\">Clave:</label>\n                        <input\n                          type=\"text\"\n                          readOnly\n                          className=\"form-control\"\n                          value={empleado.id}\n                          name=\"id\"\n                          id=\"id\"\n                          aria-describedby=\"helpId\"\n                          placeholder=\"\"\n                        ></input>\n                        <small id=\"helpId\" className=\"form-text text-muted\">\n                          Clave\n                        </small>\n                      </div>\n\n                      <div className=\"form-group\">\n                        <label htmlFor=\"\">Nombre</label>\n                        <input\n                          type=\"text\"\n                          name=\"nombre\"\n                          id=\"nombre\"\n                          className=\"form-control\"\n                          placeholder=\"\"\n                          aria-describedby=\"helpId\"\n                          value={empleado.nombre}\n                          onChange={this.cambioValor}\n                          required\n                        ></input>\n                        <small id=\"helpId\" className=\"text-muted\">\n                          Escribe el nombre del empleado\n                        </small>\n                      </div>\n\n                      <div className=\"form-group\">\n                        <label htmlFor=\"\">Apellido</label>\n                        <input\n                          type=\"text\"\n                          name=\"apellido\"\n                          id=\"apellido\"\n                          className=\"form-control\"\n                          placeholder=\"\"\n                          aria-describedby=\"helpId\"\n                          value={empleado.apellido}\n                          onChange={this.cambioValor}\n                          required\n                        ></input>\n                        <small id=\"helpId\" className=\"text-muted\">\n                          Escribe el Apellido\n                        </small>\n                      </div>\n\n                      <div className=\"form-group\">\n                        <label htmlFor=\"\">Correo</label>\n                        <input\n                          type=\"correo\"\n                          name=\"correo\"\n                          id=\"correo\"\n                          value={empleado.correo}\n                          className=\"form-control\"\n                          placeholder=\"\"\n                          aria-describedby=\"helpId\"\n                          onChange={this.cambioValor}\n                          required\n                        ></input>\n                        <small id=\"helpId\" className=\"text-muted\">\n                          Escribir correo\n                        </small>\n                      </div>\n\n                      <div className=\"form-group\">\n                        <label htmlFor=\"\">fechaIngreso</label>\n                        <input\n                          type=\"date\"\n                          name=\"fechaIngreso\"\n                          id=\"fechaIngreso\"\n                          value={empleado.fechaIngreso}\n                          onChange={this.cambioValor}\n                          className=\"form-control\"\n                          placeholder=\"\"\n                          aria-describedby=\"helpId\"\n                        ></input>\n                        <small id=\"helpId\" className=\"text-muted\">\n                          Ingresar Fecha\n                        </small>\n                      </div>\n\n                      <div className=\"btn-group\" role=\"group\" aria-label=\"\">\n                        <button type=\"submit\" className=\"btn btn-success\">\n                        <i className=\"fas fa-check\"></i>\n                        </button>\n                        <Link to={\"/\"} className=\"btn btn-danger\">\n                        <i className=\"fas fa-times\"></i>\n                        </Link>\n                      </div>\n                    </form>\n                  </div>\n                  <div className=\"card-footer text-muted\"></div>\n                </div>\n                <br></br>\n              </div>\n              <div className=\"col\"></div>\n            </div>\n          </div>\n        \n      );\n    }\n  }\n}\n\nexport default editUser;\n","import React from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport { Link} from \"react-router-dom\";\nimport _baseUrl from \"../service/api\";\nimport Axios from \"axios\";\n\nconst Formulario = ({history})=> {\n  \n \n  \n  let initValues={\n    nombre: \"\",\n      apellido: \"\",\n      correo: \"\",\n      fechaIngreso: new Date().toISOString().split(\"T\")[0],\n  };\n  \n  return (\n    <div>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col\"></div>\n          <div className=\"col-6\">\n            <br></br>\n            <Formik\n            \n              initialValues={initValues}\n              //Validaciones\n              validate={(valores) => {\n                let errores = {};\n\n                // Validacion nombre\n                if (!valores.nombre) {\n                  errores.nombre = \"Por favor ingresa un nombre\";\n                } else if (!/^[a-zA-ZÀ-ÿ\\s]{1,40}$/.test(valores.nombre)) {\n                  errores.nombre =\n                    \"El nombre solo puede contener letras y espacios\";\n                }\n\n                if (!valores.apellido) {\n                  errores.apellido = \"Por favor ingresa un apellido\";\n                } else if (!/^[a-zA-ZÀ-ÿ\\s]{1,40}$/.test(valores.apellido)) {\n                  errores.apellido =\n                    \"El apelldio solo puede contener letras y espacios\";\n                }\n\n                // Validacion correo\n                if (!valores.correo) {\n                  errores.correo = \"Por favor ingresa un correo electronico\";\n                } else if (\n                  !/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/.test(\n                    valores.correo\n                  )\n                ) {\n                  errores.correo =\n                    \"El correo solo puede contener letras, numeros, puntos, guiones y guion bajo.\";\n                }\n\n                return errores;\n              }}\n              //Enviar Formulario\n              \n              onSubmit={(valores) => {\n                Axios.post(_baseUrl, valores).then(history.push(\"/\"));\n              }}\n\n            >\n              {({ errors, values }) => {\n                \n                \n                return(\n                <div className=\"card bg-light\">\n                <div className=\"card-header\">Empleado</div>\n                <div className=\"card-body\">\n                  <Form className=\"form\">\n                    <div>\n                      <label htmlFor=\"nombre\">Nombre</label>\n                      <Field\n                        className=\"form-control\"\n                        type=\"text\"\n                        id=\"nombre\"\n                        name=\"nombre\"\n                        placeholder=\"John\"\n                      />\n                      <ErrorMessage\n                        name=\"nombre\"\n                        component={() => (\n                          <div className=\"alert alert-dismissible alert-danger\">\n                            <strong>Oh alto!</strong> {errors.nombre}\n                          </div>\n                        )}\n                      />\n                    </div>\n                    <div>\n                      <label htmlFor=\"apellido\">apellidos</label>\n                      <Field\n                        className=\"form-control\"\n                        type=\"text\"\n                        id=\"apellido\"\n                        name=\"apellido\"\n                        placeholder=\"Doe\"\n                      />\n                      <ErrorMessage\n                        name=\"apellido\"\n                        component={() => (\n                          <div className=\"alert alert-dismissible alert-danger\">\n                            <strong>Oh alto!</strong> {errors.apellido}\n                          </div>\n                        )}\n                      />\n                    </div>\n\n                    <div>\n                      <label htmlFor=\"correo\">Correo</label>\n                      <Field\n                        className=\"form-control\"\n                        type=\"text\"\n                        id=\"correo\"\n                        name=\"correo\"\n                        placeholder=\"correo@correo.com\"\n                      />\n                      <ErrorMessage\n                        name=\"correo\"\n                        component={() => (\n                          <div className=\"alert alert-dismissible alert-danger\">\n                            <strong>Oh alto!</strong> {errors.correo}\n                          </div>\n                        )}\n                      />\n                    </div>\n                    <div>\n                      <label htmlFor=\"fechaIngreso\">Fecha de ingreso</label>\n                      <Field\n                        type=\"date\"\n                        className=\"form-control\"\n                        id=\"fechaIngreso\"\n                        name=\"fechaIngreso\"\n                        value={values.fechaIngreso}\n                      />\n                    </div>\n\n                    <button type=\"submit\" className=\"btn btn-success\">\n                    <i className=\"fas fa-check\"></i>\n                    </button>\n                    <Link to={\"/\"} className=\"btn btn-danger\">\n                    <i className=\"fas fa-times\"></i>\n                    </Link>\n                  </Form>\n                </div>\n                <div className=\"card-footer text-muted\"></div>\n              </div>\n              );\n                \n}}\n            </Formik>\n            <br></br>\n          </div>\n          <div className=\"col\"></div>\n        </div>\n      </div>\n    </div>\n  );\n\n\n\n\n\n  \n\n  \n};\n\nexport default Formulario;\n","import \"./App.css\";\nimport Listar from \"../src/components/list.js\";\nimport editarEmpl from \"./components/Edit.js\";\nimport Formulario from \"./components/form.js\";\nimport React from \"react\";\nimport { Route, BrowserRouter as Router, Link } from \"react-router-dom\";\nfunction App() {\n  return (\n    <Router>\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <div className=\"nav navbar-nav\">\n          <Link className=\"nav-item nav-link active\" to={\"/\"}>\n            CRUD Empleado\n          </Link>\n        </div>\n      </nav>\n      <div className=\"container\">\n        <Route exact path=\"/\" component={Listar}></Route>\n        <Route path=\"/editEmpl/:id\" component={editarEmpl}></Route>\n        <Route path=\"/add\" component={Formulario}></Route>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n     <App /> \n    {/* <Main/> */}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}